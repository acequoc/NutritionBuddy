{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acequ\\\\Documents\\\\DH2642\\\\iprog_project\\\\src\\\\Login\\\\auth.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable default-case */\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\nimport React from \"react\";\nimport Login from \"./login.js\";\nimport Stored from \"../Presenter/storedPage.js\"; // const { useState, useEffect } = require(\"react\");\n\nfunction Auth({\n  model\n}) {\n  _s();\n\n  const [user, setUser] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [emailError, setEmailError] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState('');\n  const [hasAccount, setHasAccount] = React.useState('false');\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  }; // const handleLogout = () => {\n  //     firebase.auth().signOut();\n  // };\n\n\n  function authListener() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user); // console.log(\"authListener running....\");\n\n        model.setUserID(user.uid);\n      } else {\n        setUser(\"\");\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Stored, {\n        model: model\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignup: handleSignup,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"NFKkyUhPjXvjOJ50sgy2tbP9XWo=\");\n\n_c = Auth;\n;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/acequ/Documents/DH2642/iprog_project/src/Login/auth.js"],"names":["firebase","React","Login","Stored","Auth","model","user","setUser","useState","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","authListener","onAuthStateChanged","setUserID","uid","useEffect"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport React from \"react\";\r\nimport Login from \"./login.js\";\r\nimport Stored from \"../Presenter/storedPage.js\";\r\n\r\n// const { useState, useEffect } = require(\"react\");\r\nfunction Auth({model}) {\r\n    const [user, setUser] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [emailError, setEmailError] = React.useState('');\r\n    const [passwordError, setPasswordError] = React.useState('');\r\n    const [hasAccount, setHasAccount] = React.useState('false');\r\n    \r\n    const clearInputs = ()=> {\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n    \r\n    const clearErrors = ()=> {\r\n        setEmailError('');\r\n        setPasswordError('');\r\n    }\r\n    \r\n    const handleLogin = () => {\r\n        clearErrors();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email,password)\r\n            .catch((err) => {\r\n                switch (err.code){\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\": \r\n                    case \"auth/user-not-found\": \r\n                        setEmailError(err.message);\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        setPasswordError(err.message);\r\n                        break;\r\n                }\r\n            });\r\n    };\r\n    \r\n    const handleSignup = () => {                \r\n        clearErrors();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .catch((err) => {\r\n                switch(err.code){\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\": \r\n                        setEmailError(err.message);\r\n                        break;\r\n                    case \"auth/weak-password\":\r\n                        setPasswordError(err.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n    \r\n    // const handleLogout = () => {\r\n    //     firebase.auth().signOut();\r\n    // };\r\n    \r\n    function authListener() {\r\n        firebase\r\n            .auth()\r\n            .onAuthStateChanged((user) => {\r\n                if (user) {\r\n                    clearInputs();\r\n                    setUser(user);\r\n                    // console.log(\"authListener running....\");\r\n                    model.setUserID(user.uid);\r\n                }\r\n                else {\r\n                    setUser(\"\");\r\n                }\r\n            });\r\n    }\r\n    \r\n    React.useEffect (() => {\r\n        authListener();\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div className=\"auth\">\r\n            {user ? (\r\n                <>\r\n                    {/* <Logout handleLogout={handleLogout}/>\r\n                    <Search model={model}/> */}\r\n                    <Stored model={model}/>\r\n                </>\r\n            ):(\r\n                <Login\r\n                    email = {email}\r\n                    setEmail = {setEmail}\r\n                    password = {password}\r\n                    setPassword = {setPassword}\r\n                    handleLogin = {handleLogin}\r\n                    handleSignup = {handleSignup}\r\n                    hasAccount = {hasAccount}\r\n                    setHasAccount = {setHasAccount}\r\n                    emailError = {emailError}\r\n                    passwordError = {passwordError}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}
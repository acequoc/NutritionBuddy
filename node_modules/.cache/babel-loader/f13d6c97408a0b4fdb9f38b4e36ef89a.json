{"ast":null,"code":"import { db } from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction SaveToFirebase(list) {\n  var unsubscribe = firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      try {\n        db.ref(`${user.uid}`).push(list);\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n  unsubscribe();\n}\n\n_c = SaveToFirebase;\n\nfunction ReadFromFirebase({\n  model\n}) {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      try {\n        db.ref(`${user.uid}`).on(\"value\", snapshot => {\n          if (snapshot.val()) {\n            const values = Object.values(snapshot.val());\n            const list = Object.entries(snapshot.val());\n            const nameKeyMapping = list.map(recipe => {\n              return {\n                key: recipe[0],\n                name: recipe[1].name\n              };\n            });\n            model.setRecipeList(values);\n            model.setRecipeKeys(nameKeyMapping);\n            model.setUserID(user.uid);\n          }\n        });\n      } catch (error) {\n        alert(error);\n      }\n    } else {}\n  }); // unsubscribe();\n}\n\n_c2 = ReadFromFirebase;\n;\n\nfunction RemoveFromDatabase(id) {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      try {\n        db.ref(`${user.uid}/` + id).remove();\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n}\n\n_c3 = RemoveFromDatabase;\n\nfunction UpdateFirebase(id, name, ingredientList) {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      try {\n        db.ref(`${user.uid}/` + id).update({\n          'name': name,\n          'ingredientList': ingredientList\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n}\n\n_c4 = UpdateFirebase;\nexport { SaveToFirebase, ReadFromFirebase, RemoveFromDatabase, UpdateFirebase };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SaveToFirebase\");\n$RefreshReg$(_c2, \"ReadFromFirebase\");\n$RefreshReg$(_c3, \"RemoveFromDatabase\");\n$RefreshReg$(_c4, \"UpdateFirebase\");","map":{"version":3,"sources":["C:/Users/acequ/Documents/DH2642/iprog_project/src/Firebase/firebaseFunc.js"],"names":["db","firebase","SaveToFirebase","list","unsubscribe","auth","onAuthStateChanged","user","ref","uid","push","error","alert","ReadFromFirebase","model","on","snapshot","val","values","Object","entries","nameKeyMapping","map","recipe","key","name","setRecipeList","setRecipeKeys","setUserID","RemoveFromDatabase","id","remove","UpdateFirebase","ingredientList","update"],"mappings":"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","sourcesContent":["import {db} from \"./firebase\"; \r\nimport firebase from \"firebase\";\r\n\r\nfunction SaveToFirebase(list) { \r\n  var unsubscribe = firebase.auth().onAuthStateChanged((user)=>{\r\n    \r\n    if (user) {\r\n      try {\r\n        db.ref(`${user.uid}`).push(\r\n          list \r\n        );\r\n      } catch (error) {\r\n          alert(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  unsubscribe();\r\n}\r\n\r\nfunction ReadFromFirebase({model}){\r\n  \r\n  firebase.auth().onAuthStateChanged((user)=>{\r\n    if (user) {\r\n      try {\r\n        db.ref(`${user.uid}`).on(\"value\", (snapshot) =>{\r\n\r\n\r\n          if(snapshot.val()){\r\n            const values = Object.values(snapshot.val());\r\n            const list = Object.entries(snapshot.val());\r\n\r\n            const nameKeyMapping = list.map( recipe => {\r\n              return {\r\n                key: recipe[0], \r\n                name: recipe[1].name\r\n              };\r\n            });\r\n            model.setRecipeList(values);\r\n            model.setRecipeKeys(nameKeyMapping);\r\n            model.setUserID(user.uid);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    } else {\r\n    }\r\n  });\r\n\r\n  // unsubscribe();\r\n};\r\n\r\nfunction RemoveFromDatabase(id){\r\n  firebase.auth().onAuthStateChanged((user)=>{\r\n    if (user) {\r\n      try {\r\n\r\n        db.ref(`${user.uid}/` + id).remove();\r\n\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction UpdateFirebase(id, name, ingredientList){\r\n  firebase.auth().onAuthStateChanged((user)=>{\r\n    if (user) {\r\n      try {\r\n        db.ref(`${user.uid}/` + id)\r\n          .update({\r\n            'name': name,\r\n            'ingredientList': ingredientList\r\n          });\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport {SaveToFirebase, ReadFromFirebase, RemoveFromDatabase, UpdateFirebase};"]},"metadata":{},"sourceType":"module"}
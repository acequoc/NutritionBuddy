{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acequ\\\\Documents\\\\DH2642\\\\iprog_project\\\\src\\\\View\\\\saveView.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst SaveView = ({\n  nameMol,\n  saveName,\n  ingListName\n}) => {\n  _s();\n\n  const [name, setName] = React.useState(ingListName);\n  const [isSaved, setIsSaved] = React.useState(false);\n  const history = useHistory();\n\n  function onEnter(name) {\n    if (name !== \"\") {\n      nameMol(name);\n      setIsSaved(true);\n      saveName(name);\n    } else {\n      alert(\"Empty name!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"save\",\n    className: \"save\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reName\",\n        children: \"Save Recipe as \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoFocus: true,\n        placeholder: \"Lasagna\",\n        value: name,\n        id: \"reName\",\n        onChange: event => setName(event.target.value),\n        onKeyPress: event => event.key === \"Enter\" ? onEnter(name) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"graph-button\",\n        onClick: () => {\n          if (name !== \"\") {\n            nameMol(name);\n            setIsSaved(true);\n            saveName(name);\n          } else {\n            alert(\"Empty name!\");\n          }\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), isSaved ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"graph-button\",\n        onClick: () => history.push(\"/stored\"),\n        children: \"My recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 122\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SaveView, \"C8kmRTRNQzwlD77O+MyYExFRCmA=\", false, function () {\n  return [useHistory];\n});\n\n_c = SaveView;\nexport default SaveView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveView\");","map":{"version":3,"sources":["C:/Users/acequ/Documents/DH2642/iprog_project/src/View/saveView.js"],"names":["React","Fragment","useHistory","SaveView","nameMol","saveName","ingListName","name","setName","useState","isSaved","setIsSaved","history","onEnter","alert","event","target","value","key","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KACjB;AAAA;;AACI,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBR,KAAK,CAACS,QAAN,CAAeH,WAAf,CAAvB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMG,OAAO,GAAGV,UAAU,EAA1B;;AAEA,WAASW,OAAT,CAAiBN,IAAjB,EAAuB;AACnB,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACbH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,KAJD,MAIO;AACHO,MAAAA,KAAK,CAAC,aAAD,CAAL;AACH;AACJ;;AAED,sBAAO;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA,2BACC;AAAA,8BAEI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAEmD;AAAA;AAAA;AAAA;AAAA,cAFnD,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,MADT;AAEA,QAAA,WAAW,EAAC,SAFZ;AAEsB,QAAA,KAAK,EAAEP,IAF7B;AAGA,QAAA,EAAE,EAAC,QAHH;AAIA,QAAA,QAAQ,EAAGQ,KAAD,IAAWP,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ5B;AAKA,QAAA,UAAU,EAAGF,KAAD,IAAUA,KAAK,CAACG,GAAN,KAAc,OAAd,GAAwBL,OAAO,CAACN,IAAD,CAA/B,GAAwC;AAL9D;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACA,QAAA,OAAO,EACH,MAAK;AACD,cAAIA,IAAI,KAAK,EAAb,EAAiB;AACbH,YAAAA,OAAO,CAACG,IAAD,CAAP;AACAI,YAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,YAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,WAJD,MAIO;AACHO,YAAAA,KAAK,CAAC,aAAD,CAAL;AACH;AACJ,SAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAqBKJ,OAAO,gBAAG;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAKE,OAAO,CAACO,IAAR,CAAa,SAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cArB7G;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBH,CAzCD;;GAAMhB,Q;UAIcD,U;;;KAJdC,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst SaveView = ({nameMol, saveName, ingListName}) =>\r\n{\r\n    const [name, setName]= React.useState(ingListName);\r\n    const [isSaved, setIsSaved] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    function onEnter(name) {\r\n        if (name !== \"\") {\r\n            nameMol(name);\r\n            setIsSaved(true);\r\n            saveName(name);    \r\n        } else {\r\n            alert(\"Empty name!\");\r\n        }\r\n    }\r\n\r\n    return <div id=\"save\" className=\"save\" >\r\n            <div>\r\n                {/* <p>Current Recipe Name is: {ingListName}</p> */}\r\n                <label htmlFor=\"reName\">Save Recipe as </label><br></br>\r\n                <input type=\"text\" \r\n                autoFocus \r\n                placeholder=\"Lasagna\" value={name} \r\n                id=\"reName\" \r\n                onChange={(event) => setName(event.target.value)}\r\n                onKeyPress={(event)=> event.key === \"Enter\" ? onEnter(name) : null}/>\r\n                <button className=\"graph-button\" \r\n                onClick={\r\n                    ()=> {\r\n                        if (name !== \"\") {\r\n                            nameMol(name);\r\n                            setIsSaved(true);\r\n                            saveName(name);    \r\n                        } else {\r\n                            alert(\"Empty name!\");\r\n                        }\r\n                    }\r\n                }>Save</button>\r\n                {isSaved ? <button className=\"graph-button\" onClick={()=> history.push(\"/stored\")}>My recipes</button> : <Fragment></Fragment>}\r\n            </div>\r\n    </div>\r\n}\r\nexport default SaveView;"]},"metadata":{},"sourceType":"module"}